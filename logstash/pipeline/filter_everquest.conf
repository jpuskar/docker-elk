
filter {

    if [fields][document_type] == "everquest_log" {
        grok {
           match => [
              "message",
              "%{SYSLOG5424SD:log_date}%{GREEDYDATA:log_message}"
           ]
        }
        mutate {
            gsub => [ "log_message", "^\s*", "" ]
        }
        date {
            # ex: [Thu Aug 16 22:50:23 2018]
            match => ["log_date", "[EEE MMM dd HH:mm:ss YYYY]"]
            # timezone => "America/New_York"
            remove_field => ["log_date"]
        }


        # combat
        if "points of damage." in [log_message] {

            mutate {
                add_field => { "log_type" => "combat" }
                add_field => { "damage_type" => "melee" }
            }

            grok {
                patterns_dir => ["/usr/share/logstash/pipeline/patterns"]
                match => [
                    "log_message",
                    [
                        # hit
                        "%{GREEDYDATA:actor} %{EQ_MELEE_ACTION:melee_action} (?:a |an |)%{GREEDYDATA:target} for %{NUMBER:damage_amount} points of (?:non-melee |)damage.",

                        # miss
                        "%{GREEDYDATA:actor} (?:tries|try) to %{EQ_MELEE_ACTION:melee_action} (?:a |an |)%{GREEDYDATA:target}, but (?:a |an |)%{GREEDYDATA:target2} %{EQ_COUNTER_ACTION:counter_action}"
                    ]
                ]
            }

            mutate {
                convert => { "damage_amount" => "integer" }
            }

            mutate {
                remove_field => ["target2"]
            }
        } else if "non-melee damage." in [log_message] {

            mutate {
                add_field => { "log_type" => "combat" }
                add_field => { "damage_type" => "non-melee" }
            }

            grok {
                patterns_dir => ["/usr/share/logstash/pipeline/patterns"]
                match => [
                    "log_message",
                    [
                        # hit
                        "%{GREEDYDATA:actor} hit (?:a |an |)%{GREEDYDATA:target} for %{NUMBER:damage_amount} points of non-melee damage.",

                        # hit 2
                        "(?:a |an |)%{GREEDYDATA:target} has taken %{NUMBER:damage_amount} damage from %{WORD:actor} %{GREEDYDATA:spell}."

                        # TODO: miss \ resist
                    ]
                ]
            }

            mutate {
                convert => { "damage_amount" => "integer" }
            }

        }

    }

}

# TODO: note miss
# TODO: spell modifiers if possible (buffs, songs)
